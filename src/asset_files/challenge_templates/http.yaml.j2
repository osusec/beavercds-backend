---
apiVersion: v1
kind: Service
metadata:
  name: "rcds-{{ slug }}-{{ pod.name }}-http"
  namespace: "rcds-{{ slug }}"
  annotations:
    app.kubernetes.io/managed-by: rcds
spec:
  selector:
    rctf/part-of: "{{ slug }}-{{ pod.name }}"
  ports:
    # host service at same port as container
    {% for p in http_ports -%}
    - port: {{ p.internal }}
      targetPort: {{ p.internal }}
    {%- endfor %}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "rcds-{{ slug }}-{{ pod.name }}"
  namespace: "rcds-{{ slug }}"
  annotations:
    app.kubernetes.io/managed-by: rcds
spec:
  ingressClassName: beavercds
  rules:
  {%- for p in http_ports %}
    - host: "{{ p.expose.http }}.{{ domain }}"
      http:
        paths:
        - pathType: Prefix
          path: "/"
          backend:
            service:
              name: "rcds-{{ slug }}-{{ pod.name }}-http"
              port:
                number: {{ p.internal }}

      tls:
        - hosts: [ "{{ p.expose.http }}.{{ domain }}" ]
          secretName: "rcds-tls-{{ p.expose.http }}.{{ domain }}"
  {% endfor -%}
